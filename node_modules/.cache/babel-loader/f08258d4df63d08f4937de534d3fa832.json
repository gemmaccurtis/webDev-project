{"ast":null,"code":"var _jsxFileName = \"/Users/gemma_curtis/Documents/UNI/contemp-web-app-solutions/src/Views/Dash.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DaysCompleted from \"../Components/DaysCompleted\";\nimport Checkin from \"../Components/Checkin\";\nimport avatarPlaceHolder from \"../assets/avatar_placeholder.png\";\nimport * as dayjs from 'dayjs';\n\nfunction Dash(props) {\n  const {\n    user,\n    readCheckins,\n    readChallenges,\n    createComment,\n    readComments\n  } = props;\n  const [allCheckins, setAllCheckins] = useState([]);\n  const [daysComplete, setDaysComplete] = useState(0);\n  const [percentageComplete, setPercentageComplete] = useState(0);\n\n  const handleComment = async (checkinId, comment) => {\n    await createComment(checkinId, comment);\n  };\n\n  useEffect(() => {\n    const getAllCheckins = async () => {\n      const aCheckins = await readCheckins();\n      let checkins = [];\n      aCheckins.forEach(c => checkins.push({ ...c.data(),\n        ...{\n          id: c.id\n        }\n      }));\n      setAllCheckins(checkins);\n    };\n\n    const getAllChallenges = async () => {\n      const aChallenges = await readChallenges();\n      let challenges = [];\n      aChallenges.forEach(c => challenges.push(c.data())); // using the daysjs libary to work out the days to the end of the challenge\n\n      const now = dayjs();\n      const start = dayjs(challenges[0].start.toDate());\n      const end = dayjs(challenges[0].end.toDate());\n      const totalDays = end.diff(start, 'day');\n      const daysCompleted = now.diff(start, 'day');\n      const percentageComplete = parseInt(daysCompleted) / parseInt(totalDays) * 100;\n      setDaysComplete(daysCompleted);\n      setPercentageComplete(Math.round(percentageComplete));\n    };\n\n    getAllCheckins();\n    getAllChallenges();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(DaysCompleted, {\n    days: daysComplete,\n    percentageComplete: percentageComplete,\n    checkins: allCheckins.filter(c => c.userId === user.uid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), allCheckins.map(c => React.createElement(Checkin, {\n    onComment: handleComment,\n    userProfilePicture: user.photoURL || avatarPlaceHolder,\n    user: user,\n    checkin: c,\n    readComments: readComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}\n\nDash.propTypes = {\n  checkins: PropTypes.array.isRequired,\n  readCheckins: PropTypes.object.isRequired\n};\nexport default Dash;","map":{"version":3,"sources":["/Users/gemma_curtis/Documents/UNI/contemp-web-app-solutions/src/Views/Dash.js"],"names":["React","useEffect","useState","PropTypes","DaysCompleted","Checkin","avatarPlaceHolder","dayjs","Dash","props","user","readCheckins","readChallenges","createComment","readComments","allCheckins","setAllCheckins","daysComplete","setDaysComplete","percentageComplete","setPercentageComplete","handleComment","checkinId","comment","getAllCheckins","aCheckins","checkins","forEach","c","push","data","id","getAllChallenges","aChallenges","challenges","now","start","toDate","end","totalDays","diff","daysCompleted","parseInt","Math","round","filter","userId","uid","map","photoURL","propTypes","array","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAqBC,IAAAA,cAArB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA;AAApD,MAAoEL,KAA1E;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,CAAD,CAA5D;;AAEC,QAAMmB,aAAa,GAAG,OAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AAEnD,UAAMV,aAAa,CAACS,SAAD,EAAYC,OAAZ,CAAnB;AAEA,GAJD;;AAMDtB,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMuB,cAAc,GAAI,YAAY;AAClC,YAAMC,SAAS,GAAI,MAAMd,YAAY,EAArC;AACA,UAAIe,QAAQ,GAAG,EAAf;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,CAAC,IAAIF,QAAQ,CAACG,IAAT,CAAc,EAAC,GAAGD,CAAC,CAACE,IAAF,EAAJ;AAAa,WAAG;AAACC,UAAAA,EAAE,EAACH,CAAC,CAACG;AAAN;AAAhB,OAAd,CAAvB;AACAf,MAAAA,cAAc,CAACU,QAAD,CAAd;AACD,KALD;;AAOA,UAAMM,gBAAgB,GAAG,YAAY;AACnC,YAAMC,WAAW,GAAG,MAAMrB,cAAc,EAAxC;AACA,UAAIsB,UAAU,GAAG,EAAjB;AACAD,MAAAA,WAAW,CAACN,OAAZ,CAAoBC,CAAC,IAAIM,UAAU,CAACL,IAAX,CAAgBD,CAAC,CAACE,IAAF,EAAhB,CAAzB,EAHmC,CAInC;;AACA,YAAMK,GAAG,GAAI5B,KAAK,EAAlB;AACA,YAAM6B,KAAK,GAAG7B,KAAK,CAAC2B,UAAU,CAAC,CAAD,CAAV,CAAcE,KAAd,CAAoBC,MAApB,EAAD,CAAnB;AACA,YAAMC,GAAG,GAAG/B,KAAK,CAAC2B,UAAU,CAAC,CAAD,CAAV,CAAcI,GAAd,CAAkBD,MAAlB,EAAD,CAAjB;AACA,YAAME,SAAS,GAAGD,GAAG,CAACE,IAAJ,CAASJ,KAAT,EAAgB,KAAhB,CAAlB;AACA,YAAMK,aAAa,GAAGN,GAAG,CAACK,IAAJ,CAASJ,KAAT,EAAgB,KAAhB,CAAtB;AACA,YAAMjB,kBAAkB,GAAIuB,QAAQ,CAACD,aAAD,CAAR,GAA0BC,QAAQ,CAACH,SAAD,CAAnC,GAAkD,GAA7E;AAEArB,MAAAA,eAAe,CAACuB,aAAD,CAAf;AACArB,MAAAA,qBAAqB,CAACuB,IAAI,CAACC,KAAL,CAAWzB,kBAAX,CAAD,CAArB;AAEC,KAfH;;AAiBAK,IAAAA,cAAc;AACdQ,IAAAA,gBAAgB;AAIjB,GA/BQ,EA+BN,EA/BM,CAAT;AAmCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEf,YAArB;AAAmC,IAAA,kBAAkB,EAAEE,kBAAvD;AAA4E,IAAA,QAAQ,EAAEJ,WAAW,CAAC8B,MAAZ,CAAmBjB,CAAC,IAAIA,CAAC,CAACkB,MAAF,KAAapC,IAAI,CAACqC,GAA1C,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAMIhC,WAAW,CAACiC,GAAZ,CAAkBpB,CAAD,IAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEP,aAApB;AAAmC,IAAA,kBAAkB,EAAEX,IAAI,CAACuC,QAAL,IAAiB3C,iBAAxE;AAA4F,IAAA,IAAI,EAAEI,IAAlG;AAAwG,IAAA,OAAO,EAAEkB,CAAjH;AAAoH,IAAA,YAAY,EAAEd,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CANJ,CADF;AAcD;;AAEDN,IAAI,CAAC0C,SAAL,GAAiB;AACbxB,EAAAA,QAAQ,EAAEvB,SAAS,CAACgD,KAAV,CAAgBC,UADb;AAEbzC,EAAAA,YAAY,EAAER,SAAS,CAACkD,MAAV,CAAiBD;AAFlB,CAAjB;AAKA,eAAe5C,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport DaysCompleted from \"../Components/DaysCompleted\";\nimport Checkin from \"../Components/Checkin\";\nimport avatarPlaceHolder from \"../assets/avatar_placeholder.png\"\nimport * as dayjs from 'dayjs';\n\n\nfunction Dash(props) {\n\n  const { user, readCheckins,readChallenges, createComment, readComments} = props;\n  const [allCheckins, setAllCheckins] = useState([]);\n  const [daysComplete, setDaysComplete] = useState(0);\n  const [percentageComplete, setPercentageComplete] = useState(0);\n \n   const handleComment = async (checkinId, comment) => {\n    \n    await createComment(checkinId, comment);\n\n   }\n\n  useEffect(() => {\n\n    const getAllCheckins =  async () => {\n      const aCheckins =  await readCheckins();\n      let checkins = [];\n      aCheckins.forEach(c => checkins.push({...c.data(),...{id:c.id} }));\n      setAllCheckins(checkins)\n    }\n\n    const getAllChallenges = async () => {\n      const aChallenges = await readChallenges();\n      let challenges = [];\n      aChallenges.forEach(c => challenges.push(c.data()));\n      // using the daysjs libary to work out the days to the end of the challenge\n      const now =  dayjs();\n      const start = dayjs(challenges[0].start.toDate());\n      const end = dayjs(challenges[0].end.toDate());\n      const totalDays = end.diff(start, 'day');\n      const daysCompleted = now.diff(start, 'day');\n      const percentageComplete = (parseInt(daysCompleted) / parseInt(totalDays)) * 100;\n\n      setDaysComplete(daysCompleted);\n      setPercentageComplete(Math.round(percentageComplete));  \n \n      }\n\n    getAllCheckins();\n    getAllChallenges();\n  \n  \n  \n  }, [])\n\n\n\n  return (\n    <div>\n    \n      <DaysCompleted days={daysComplete} percentageComplete={percentageComplete}  checkins={allCheckins.filter(c => c.userId === user.uid)}/>\n     \n      \n      {\n        allCheckins.map( (c) => <Checkin onComment={handleComment} userProfilePicture={user.photoURL || avatarPlaceHolder}  user={user} checkin={c} readComments={readComments} />)\n      }\n      \n\n     \n    </div>\n  );\n}\n\nDash.propTypes = {\n    checkins: PropTypes.array.isRequired,\n    readCheckins: PropTypes.object.isRequired\n};\n\nexport default Dash;\n\n\n"]},"metadata":{},"sourceType":"module"}